swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /transactions/currentMonth:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Find all the transactions for the current month
      description: Returns transactions of the current month
      parameters:
        - in: header
          type: 'string'
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Current month transactions retrieved successully
          schema:
            $ref: '#/definitions/TransactionsCurrentMonthResponse'
        '401':
          $ref: '#/responses/401'
        '500':
          $ref: '#/responses/500'
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Find a transaction by ID
      description: Find transation by ID
      parameters:
        - in: header
          type: 'string'
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: 'transactionId'
          in: 'path'
          description: 'ID of the transaction that needs to be fetched'
          required: true
          type: 'string'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction retrieved successfully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
  /transactions/{transactionId}/informations:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Create a transaction's information
      description: ''
      parameters:
        - in: header
          type: 'string'
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: 'transactionId'
          in: 'path'
          description: 'ID of the transaction in which the information will be added'
          required: true
          type: 'string'
        - in: 'body'
          name: 'body'
          description: 'information to create'
          required: true
          schema:
            $ref: '#/definitions/TransactionInformation'
      produces:
        - application/json
      responses:
        '201':
          $ref: '#/responses/200'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '400':
          $ref: '#/responses/400'
        '500':
          $ref: '#/responses/500'
  /transactions/{transactionId}/informations/{informationId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get a transaction's information
      description: ''
      parameters:
        - in: header
          type: 'string'
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: 'transactionId'
          in: 'path'
          description: 'ID of the transaction in which the information is'
          required: true
          type: 'string'
        - name: 'informationId'
          in: 'path'
          description: 'ID of the information to be retrieved'
          required: true
          type: 'string'
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/TransactionInformationResponse'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update a transaction's information
      description: ''
      parameters:
        - in: header
          type: 'string'
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: 'transactionId'
          in: 'path'
          description: 'ID of the transaction in which the information is'
          required: true
          type: 'string'
        - name: 'informationId'
          in: 'path'
          description: 'ID of the information to be updated'
          required: true
          type: 'string'
        - in: 'body'
          name: 'body'
          description: 'information to create'
          required: true
          schema:
            $ref: '#/definitions/TransactionInformation'
      produces:
        - application/json
      responses:
        '200':
          $ref: '#/responses/200'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '400':
          $ref: '#/responses/400'
        '500':
          $ref: '#/responses/500'

    delete:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Delete a transaction's information
      description: ''
      parameters:
        - in: header
          type: 'string'
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: 'transactionId'
          in: 'path'
          description: 'ID of the transaction in which the information is'
          required: true
          type: 'string'
        - name: 'informationId'
          in: 'path'
          description: 'ID of the information to be deleted'
          required: true
          type: 'string'
      produces:
        - application/json
      responses:
        '200':
          $ref: '#/responses/200'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
responses:
  200:
    description: Successful operation
    schema:
      $ref: '#/definitions/Ok'
  401:
    description: Unauthorized
    schema:
      $ref: '#/definitions/Error'
  404:
    description: Information not found
    schema:
      $ref: '#/definitions/Error'
  400:
    description: Bad request
    schema:
      $ref: '#/definitions/Error'
  500:
    description: Internal Server Error
    schema:
      $ref: '#/definitions/Error'
definitions:
  Ok:
    type: object
    properties:
      code:
        type: integer
      message:
        type: string
    required:
      - code
      - message
  Error:
    type: object
    properties:
      code:
        type: integer
      error:
        type: string
    required:
      - code
      - message
  TransactionInformation:
    type: object
    properties:
      name:
        type: string
      value:
        type: string
  TransactionsCurrentMonthResponse:
    type: array
    items:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
        account:
          type: string
          description: the corresponding type of account concerned (credit category, etc.)
        amount:
          type: string
        transactionType:
          type: string
          description: the type of transaction (electronic, etc.)
        category:
          type: string
          description: the category of transaction (food, etc.)
        informations:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              value:
                type: string
  TransactionResponse:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
      account:
        type: string
        description: the corresponding type of account concerned (credit category, etc.)
      amount:
        type: string
      transactionType:
        type: string
        description: the type of transaction (electronic, etc.)
      category:
        type: string
        description: the category of transaction (food, etc.)
      informations:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            value:
              type: string
  TransactionInformationResponse:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      value:
        type: string
