swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /transactions/currentMonth:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Find all the transactions for the current month
      description: Returns transactions of the current month
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/TransactionsCurrentMonthResponse'
        '401': 
          description: Unauthorized
        '500':
          description: Internal Server Error
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Find a transaction by ID
      description: Find transation by ID
      parameters:
        - in: header
          type: 'string'
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: 'transactionId'
          in: 'path'
          description: 'ID of the transaction that needs to be fetched'
          required: true
          type: 'string'
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/TransactionResponse'
        '401': 
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
  /transactions/{transactionId}/informations:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Create a transaction's information
      description: ''
      parameters:
        - in: header
          type: 'string'
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: 'transactionId'
          in: 'path'
          description: 'ID of the transaction in which the information will be added'
          required: true
          type: 'string'
        - in: 'body'
          name: 'body'
          description: 'information to create'
          required: true
          schema:
            $ref: '#/definitions/TransactionInformation'
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
        '401': 
          description: Unauthorized
        '404':
          description: Information not found
        '405':
          description: Invalid input
        '500':
          description: Internal Server Error
  /transactions/{transactionId}/informations/{informationId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get a transaction's information
      description: ''
      parameters:
        - in: header
          type: 'string'
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: 'transactionId'
          in: 'path'
          description: 'ID of the transaction in which the information is'
          required: true
          type: 'string'
        - name: 'informationId'
          in: 'path'
          description: 'ID of the information to be retrieved'
          required: true
          type: 'string'
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/TransactionInformationResponse'
        '401': 
          description: Unauthorized
        '404':
          description: Information not found
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update a transaction's information
      description: ''
      parameters:
        - in: header
          type: 'string'
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: 'transactionId'
          in: 'path'
          description: 'ID of the transaction in which the information is'
          required: true
          type: 'string'
        - name: 'informationId'
          in: 'path'
          description: 'ID of the information to be updated'
          required: true
          type: 'string'
        - in: 'body'
          name: 'body'
          description: 'information to create'
          required: true
          schema:
            $ref: '#/definitions/TransactionInformation'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction's information retrieved successfully
        '401': 
          description: Unauthorized
        '404':
          description: Information not found
        '405':
          description: Invalid input
        '500':
          description: Internal Server Error

    delete:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Delete a transaction's information
      description: ''
      parameters:
        - in: header
          type: 'string'
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: 'transactionId'
          in: 'path'
          description: 'ID of the transaction in which the information is'
          required: true
          type: 'string'
        - name: 'informationId'
          in: 'path'
          description: 'ID of the information to be deleted'
          required: true
          type: 'string'
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
        '401': 
          description: Unauthorized
        '404':
          description: Information not found
        '500':
          description: Internal Server Error
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          type: 'string'
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401': 
          description: Unauthorized
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          type: 'string'
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401': 
          description: Unauthorized
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  TransactionInformation:
    type: object
    properties:
      name:
        type: string
      value:
        type: string
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  TransactionsCurrentMonthResponse:
    type: array
    items:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
        account:
          type: string
          description: the corresponding type of account concerned (credit category, etc.)
        amount:
          type: string
        transactionType:
          type: string
          description: the type of transaction (electronic, etc.)
        category:
          type: string
          description: the category of transaction (food, etc.)
        informations:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              value:
                type: string
  TransactionResponse:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
      account:
        type: string
        description: the corresponding type of account concerned (credit category, etc.)
      amount:
        type: string
      transactionType:
        type: string
        description: the type of transaction (electronic, etc.)
      category:
        type: string
        description: the category of transaction (food, etc.)
      informations:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            value:
              type: string
  TransactionInformationResponse:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      value:
        type: string
